
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  status: 'status',
  seed: 'seed',
  creatorId: 'creatorId'
};

exports.Prisma.TurnScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  number: 'number',
  payload: 'payload',
  createdAt: 'createdAt'
};

exports.Prisma.TeamSelectionScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  userId: 'userId',
  team: 'team',
  teamId: 'teamId',
  createdAt: 'createdAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  name: 'name',
  roster: 'roster',
  createdAt: 'createdAt'
};

exports.Prisma.TeamPlayerScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  name: 'name',
  position: 'position',
  number: 'number',
  ma: 'ma',
  st: 'st',
  ag: 'ag',
  pa: 'pa',
  av: 'av',
  skills: 'skills'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  Match: 'Match',
  Turn: 'Turn',
  TeamSelection: 'TeamSelection',
  Team: 'Team',
  TeamPlayer: 'TeamPlayer'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/remy/Sites/bloodbowl/fantasy-football-game/apps/server/src/prisma-sqlite-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/remy/Sites/bloodbowl/fantasy-football-game/apps/server/prisma/sqlite/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma/sqlite",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "TEST_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../../src/prisma-sqlite-client\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"TEST_DATABASE_URL\")\n}\n\nmodel User {\n  id             String          @id @default(cuid())\n  email          String          @unique\n  passwordHash   String\n  name           String?\n  role           String          @default(\"user\")\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @updatedAt\n  matches        Match[]\n  createdMatches Match[]         @relation(\"MatchCreator\")\n  teams          Team[]\n  teamSelections TeamSelection[]\n}\n\nmodel Match {\n  id             String          @id @default(cuid())\n  createdAt      DateTime        @default(now())\n  status         String\n  seed           String\n  creator        User?           @relation(\"MatchCreator\", fields: [creatorId], references: [id])\n  creatorId      String?\n  players        User[]\n  turns          Turn[]\n  teamSelections TeamSelection[]\n}\n\nmodel Turn {\n  id        String   @id @default(cuid())\n  match     Match    @relation(fields: [matchId], references: [id])\n  matchId   String\n  number    Int\n  payload   Json\n  createdAt DateTime @default(now())\n}\n\nmodel TeamSelection {\n  id        String   @id @default(cuid())\n  match     Match    @relation(fields: [matchId], references: [id])\n  matchId   String\n  user      User     @relation(fields: [userId], references: [id])\n  userId    String\n  team      String?\n  teamRef   Team?    @relation(fields: [teamId], references: [id])\n  teamId    String?\n  createdAt DateTime @default(now())\n\n  @@unique([matchId, userId])\n  @@unique([matchId, teamId])\n}\n\nmodel Team {\n  id         String          @id @default(cuid())\n  owner      User            @relation(fields: [ownerId], references: [id])\n  ownerId    String\n  name       String\n  roster     String\n  createdAt  DateTime        @default(now())\n  players    TeamPlayer[]\n  selections TeamSelection[]\n}\n\nmodel TeamPlayer {\n  id       String @id @default(cuid())\n  team     Team   @relation(fields: [teamId], references: [id])\n  teamId   String\n  name     String\n  position String\n  number   Int\n  ma       Int\n  st       Int\n  ag       Int\n  pa       Int\n  av       Int\n  skills   String\n}\n",
  "inlineSchemaHash": "5626aa425700bb21c3518ae56b1ca8d6a13d23ded22241651adb66d5a467b141",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToUser\"},{\"name\":\"createdMatches\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchCreator\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToUser\"},{\"name\":\"teamSelections\",\"kind\":\"object\",\"type\":\"TeamSelection\",\"relationName\":\"TeamSelectionToUser\"}],\"dbName\":null},\"Match\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MatchCreator\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"players\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MatchToUser\"},{\"name\":\"turns\",\"kind\":\"object\",\"type\":\"Turn\",\"relationName\":\"MatchToTurn\"},{\"name\":\"teamSelections\",\"kind\":\"object\",\"type\":\"TeamSelection\",\"relationName\":\"MatchToTeamSelection\"}],\"dbName\":null},\"Turn\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToTurn\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TeamSelection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"Match\",\"relationName\":\"MatchToTeamSelection\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamSelectionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamRef\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamSelection\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamToUser\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"players\",\"kind\":\"object\",\"type\":\"TeamPlayer\",\"relationName\":\"TeamToTeamPlayer\"},{\"name\":\"selections\",\"kind\":\"object\",\"type\":\"TeamSelection\",\"relationName\":\"TeamToTeamSelection\"}],\"dbName\":null},\"TeamPlayer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamPlayer\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ma\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"st\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ag\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pa\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"av\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    TEST_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['TEST_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.TEST_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

