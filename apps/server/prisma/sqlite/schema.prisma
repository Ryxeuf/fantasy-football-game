generator client {
  provider = "prisma-client-js"
  output   = "../../src/prisma-sqlite-client"
}

datasource db {
  provider = "sqlite"
  url      = env("TEST_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  passwordHash String
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  matches   Match[]
  createdMatches Match[] @relation("MatchCreator")
  teams     Team[]
  teamSelections TeamSelection[]
}

model Match {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  status    String
  seed      String
  creator    User?   @relation("MatchCreator", fields: [creatorId], references: [id])
  creatorId  String?
  players   User[]
  turns     Turn[]
  teamSelections TeamSelection[]
}

model Turn {
  id        String   @id @default(cuid())
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   String
  number    Int
  payload   Json
  createdAt DateTime @default(now())
}

model TeamSelection {
  id        String   @id @default(cuid())
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  team      String?
  teamRef   Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
  createdAt DateTime @default(now())

  @@unique([matchId, userId])
  @@unique([matchId, teamId])
}

model Team {
  id        String   @id @default(cuid())
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  name      String
  roster    String
  createdAt DateTime @default(now())
  players   TeamPlayer[]
  selections TeamSelection[]
  
  // Informations d'équipe Blood Bowl
  treasury      Int @default(0)        // Trésorerie en pièces d'or
  rerolls       Int @default(0)        // Nombre de relances (0-8)
  cheerleaders  Int @default(0)        // Nombre de cheerleaders (0-12)
  assistants    Int @default(0)        // Nombre d'assistants (0-6)
  apothecary    Boolean @default(false) // Présence d'un apothicaire
  dedicatedFans Int @default(1)        // Nombre de fans dévoués (1-6)
  
  // Valeurs calculées (pour affichage)
  teamValue     Int @default(0)        // Valeur d'équipe (VE)
  currentValue  Int @default(0)        // Valeur d'équipe actuelle (VEA)
}

model TeamPlayer {
  id        String   @id @default(cuid())
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  name      String
  position  String
  number    Int
  ma        Int
  st        Int
  ag        Int
  pa        Int
  av        Int
  skills    String
}


